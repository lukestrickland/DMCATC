data.noNRs[data.noNRs$cond=="D" &data.noNRs$cumsum>10,]
max(sim.noNRs$RT[sim.noNRs$cond=="A" &sim.noNRs$cumsum>12])
head(sim.noNRs)
max(sim.noNRs$RT[sim.noNRs$cond=="A" &sim.noNRs$cumsum>12])
max(sim.noNRs$RT[sim.noNRs$cond=="A"])
max(sim.noNRs$cumsum[sim.noNRs$cond=="A"])
max(sim.noNRs$cumsum[sim.noNRs$cond=="B"])
max(sim.noNRs$cumsum[sim.noNRs$cond=="C"])
max(sim.noNRs$cumsum[sim.noNRs$cond=="D"])
sim.noNRs$RT[sim.noNRs$cond=="D"]
max(sim.noNRs$RT[sim.noNRs$cond=="D"])
sim.noNRs[sim.noNRs$RT>10,]
sim.noNRs[sim.noNRs$RT>30,]
sim.noNRs[sim.noNRs$RT>100,]
sim <- do.call(rbind, h.matched.samples)
getdata <- lapply(h.matched.samples, function(x) attr(x, "data"))
data <- do.call(rbind, getdata)
data<-add.trial.cumsum.data(data)
sim<-add.trial.cumsum.sim (sim, data)
sim
head(sim)
mark_sim_nrs <- sim$cond=="A" & sim$cumsum>12 |sim$cond=="B" & sim$cumsum>8 |
sim$cond=="C" & sim$cumsum>20 |sim$cond=="D" & sim$cumsum>10
sim[50:100,]
cbind(sim, mark_sim_nrs)
sim.noNRs <- sim[!mark_sim_nrs,]
max(sim.noNRs$RT)
sim.noNRs[sim.noNRs$RT>100,]
sim.noNRs[sim.noNRs$Trial==452062,]
sim.noNRs[sim.noNRs$trial==452062,]
sim.noNRs[sim.noNRs$trial==452063,]
data(max(data$RT))
max(data$RT)
head(data)
max(data$RT, na.rm=T)
max(data$RT[data$cond=="A"], na.rm=T)
max(data$RT[data$cond=="B"], na.rm=T)
max(data$RT[data$cond=="C"], na.rm=T)
max(data$RT[data$cond=="D"], na.rm=T)
add.trial.cumsum.sim
sim$trial <- rep(data$trial, max(sim$reps))
for(i in 1:max(sim$reps)) {
sim$trial[sim$reps==i] <- data$trial + (i-1)*max(data$trial)
}
head(sim)
tail(sim)
sim <- do.call(rbind, h.matched.samples)
sim$trial <- rep(data$trial, max(sim$reps))
for(i in 1:max(sim$reps)) {
sim$trial[sim$reps==i] <- data$trial + (i-1)*max(data$trial)
}
head(sim)
sim$trial
sim[sim$trial==891,]
sim[sim$trial==892,]
sim[sim$trial==20000,]
sim[sim$trial==60000,]
sim[sim$trial==90000,]
sim[sim$trial==100000,]
sim[sim$trial==1000000,]
sim[sim$trial==10000000,]
sim[sim$trial==100008,]
test <-cbind(sim,unlist(by(sim$RT,list(sim$trial),cumsum)))
head(test)
2.853838 + 3.810342
head(test,100)
test[50000:50100,]
require("data.table")
dat2<-data.table(sim)
dat2[,list(RT,trial.pos,Cumsum=cumsum(RT)),list(trial)]
as.vector(dat2)
as.data.frame(dat2)
dat2<-dat2[,list(RT,trial.pos,Cumsum=cumsum(RT)),list(trial)]
data.frame(dat2)
head(dat2<-dat2[,list(RT,trial.pos,Cumsum=cumsum(RT)),list(trial)]
data.frame(dat2))
head(data.frame(dat2))
names(sim)
factors(sim)
colnames(sim)
colnames(sim)[-length(sim)]
list(colnames(sim)[-length(sim)])
dat2<-dat2[,list(
reps,      cond ,     block,     S   ,
R   ,      RT ,       trial.pos,
trial
Cumsum=cumsum(RT)),list(trial)]
dat2<-dat2[,list(
reps,      cond ,     block,     S   ,
R   ,      RT ,       trial.pos,
trial ,
Cumsum=cumsum(RT)),list(trial)]
dat2<-data.table(sim)
dat2<-dat2[,list(
reps,      cond ,     block,     S   ,
R   ,      RT ,       trial.pos,
trial ,
Cumsum=cumsum(RT)),list(trial)]
data.frame(dat2)
test<-data.frame(dat2)
max(test$Cumsum)
add.trial.cumsum.sim
add.trial.cumsum.sim <- function (sim, data) {
if (!all.equal(rep(data$trial.pos, 100), sim$trial.pos)){
stop("Data and Sim Trial Positions do not match")
}
sim$trial <- rep(data$trial, max(sim$reps))
for(i in 1:max(sim$reps)) {
sim$trial[sim$reps==i] <- data$trial + (i-1)*max(data$trial)
}
sim<-data.table(sim)
sim<-sim[,list(
reps,      cond ,     block,     S   ,
R   ,      RT ,       trial.pos,
trial ,
cumsum=cumsum(RT)),list(trial)]
data.frame(sim)
}
sim<-add.trial.cumsum.sim (sim, data)
library("data.table")
on-resposes
NR.df <- get.NRs.ATCDMC(sim, data, miss_fun=get.trials.missed.E1_A4)
plot <- ggplot(NR.df, aes(cond, mean))
plot + geom_point(size=3) + geom_errorbar(aes(ymax = upper, ymin = lower), width= 0.2) +
geom_point(aes(cond, data), pch=21, size=4,
colour="black")+geom_line(aes(group = 1, y=data), linetype=2)+
ylab("Probability of non-response") + xlab("Time Pressure/ Traffic Load")
mark_sim_nrs <- sim$cond=="A" & sim$cumsum>12 |sim$cond=="B" & sim$cumsum>8 |
sim$cond=="C" & sim$cumsum>20 |sim$cond=="D" & sim$cumsum>10
sim.noNRs <- sim[!mark_sim_nrs,]
data.noNRs <- data[data$R!="M",]
max(sim.noNRs$RT[sim.noNRs$cond=="A" &sim.noNRs$cumsum>12])
head(sim)
max(sim.noNRs$RT[sim.noNRs$cond=="A"])
max(sim.noNRs$RT[sim.noNRs$cond=="B"])
max(sim.noNRs$RT[sim.noNRs$cond=="C"])
max(sim.noNRs$RT[sim.noNRs$cond=="D"])
unning this top to bottom should correspond to my data analysis from the
# PMDC manuscript.
rm(list=ls())
# setwd("~/russ_model_analyses")
setwd("D:/Software/DMC_ATCPMDC")
source("dmc/dmc.R")
source("dmc/dmc_ATC.R")
f any say "FAIL" then it didn't converge
for(i in 1:length(samples)) {
print(attr(samples[[i]], "auto"))
}
# Check your samples are all the same length for every participant
for(i in 1:length(samples)) {
print(samples[[i]]$nmc)
}
samples <- E1.block.B.V_cond.B.V.PMV.samples
load("data/samples/E1.block.B.V_cond.B.V.PMV.samples.RData")
for(i in 1:length(samples)) {
print(attr(samples[[i]], "auto"))
}
# Check your samples are all the same length for every participant
for(i in 1:length(samples)) {
print(samples[[i]]$nmc)
}
samples <- E1.block.B.V_cond.B.V.PMV.samples
for(i in 1:length(samples)) {
print(attr(samples[[i]], "auto"))
}
# Check your samples are all the same length for every participant
for(i in 1:length(samples)) {
print(samples[[i]]$nmc)
}
load("data/exp_data/okdats.E1.NR.RData")
names(okdats)[length(okdats)] <- "trial.pos"
levels(okdats$block)<- c("2", "3")
for (i in 1:length(samples)) {
data <- okdats[okdats$s==levels(okdats$s)[i],]
data <-data[,c(2,3,4,5,6,7)]
attr(samples[[i]], "NRdata") <- data
}
h.matched.samples <- h.post.predict.dmc.MATCHORDER(samples)
sim <- do.call(rbind, h.matched.samples)
getdata <- lapply(h.matched.samples, function(x) attr(x, "data"))
data <- do.call(rbind, getdata)
data<-add.trial.cumsum.data(data)
sim<-add.trial.cumsum.sim (sim, data)
NR.df <- get.NRs.ATCDMC(sim, data, miss_fun=get.trials.missed.E1_A4)
plot <- ggplot(NR.df, aes(cond, mean))
plot + geom_point(size=3) + geom_errorbar(aes(ymax = upper, ymin = lower), width= 0.2) +
geom_point(aes(cond, data), pch=21, size=4,
colour="black")+geom_line(aes(group = 1, y=data), linetype=2)+
ylab("Probability of non-response") + xlab("Time Pressure/ Traffic Load")
mark_sim_nrs <- sim$cond=="A" & sim$cumsum>12 |sim$cond=="B" & sim$cumsum>8 |
sim$cond=="C" & sim$cumsum>20 |sim$cond=="D" & sim$cumsum>10
sim.noNRs <- sim[!mark_sim_nrs,]
data.noNRs <- data[data$R!="M",]
# Desired level names for graphs of factors
# Rename appropriately
lev.S <- c("Conflict", "Nonconflict", "PM (Conflict)", "PM (Nonconflict)")
lev.PM <- c("Control", "PM")
lev.cond <- c("LL.LT", "LL.HT",
"HL.LT", "HL.HT")
# Conflict R, Nonconf R, PMR
lev.R <- c("CR", "NR", "PMR")
get.fitgglist.dmc()
get.fitgglist.dmc
levels(dats$S)
levels(data$S)
levels(data$R)
levels(data.noNR$R)
levels(data.noNRs$R)
data.noNRs$R <- factor(as.character(data.noNRs$R ))
levels(data.noNRs$R)
str(GGlist)
red level names for graphs of factors
# Rename appropriately
lev.S <- c("Conflict", "Nonconflict", "PM (Conflict)", "PM (Nonconflict)")
lev.PM <- c("Control", "PM")
lev.cond <- c("LL.LT", "LL.HT",
"HL.LT", "HL.HT")
# Conflict R, Nonconf R, PMR
lev.R <- c("CR", "NR", "PMR")
GGLIST <- get.fitgglist.dmc(sim, data)
str(sim)
str(data)
sim <- do.call(rbind, h.matched.samples)
getdata <- lapply(h.matched.samples, function(x) attr(x, "data"))
data <- do.call(rbind, getdata)
data<-add.trial.cumsum.data(data)
sim<-add.trial.cumsum.sim (sim, data)
head(sim)
add.trial.cumsum.sim
sim <- do.call(rbind, h.matched.samples)
getdata <- lapply(h.matched.samples, function(x) attr(x, "data"))
data <- do.call(rbind, getdata)
sim$trial <- rep(data$trial, max(sim$reps))
for(i in 1:max(sim$reps)) {
sim$trial[sim$reps==i] <- data$trial + (i-1)*max(data$trial)
}
data<-add.trial.cumsum.data(data)
sim$trial <- rep(data$trial, max(sim$reps))
for(i in 1:max(sim$reps)) {
sim$trial[sim$reps==i] <- data$trial + (i-1)*max(data$trial)
}
head(sim)
sim<-data.table(sim)
sim<-sim[,list(
reps,      cond ,     block,     S   ,
R   ,      RT ,       trial.pos,
trial ,
cumsum=cumsum(RT)),list(trial)]
head(sim)
sim<-sim[,list(
reps,      cond ,     block,     S   ,
R   ,      RT ,       trial.pos,
cumsum=cumsum(RT)),list(trial)]
data.frame(sim)
add.trial.cumsum.sim <- function (sim, data) {
if (!all.equal(rep(data$trial.pos, 100), sim$trial.pos)){
stop("Data and Sim Trial Positions do not match")
}
sim$trial <- rep(data$trial, max(sim$reps))
for(i in 1:max(sim$reps)) {
sim$trial[sim$reps==i] <- data$trial + (i-1)*max(data$trial)
}
sim<-data.table(sim)
sim<-sim[,list(
reps,      cond ,     block,     S   ,
R   ,      RT ,       trial.pos,
cumsum=cumsum(RT)),list(trial)]
data.frame(sim)
[,-1]
}
add.trial.cumsum.sim <- function (sim, data) {
if (!all.equal(rep(data$trial.pos, 100), sim$trial.pos)){
stop("Data and Sim Trial Positions do not match")
}
sim$trial <- rep(data$trial, max(sim$reps))
for(i in 1:max(sim$reps)) {
sim$trial[sim$reps==i] <- data$trial + (i-1)*max(data$trial)
}
sim<-data.table(sim)
sim<-sim[,list(
reps,      cond ,     block,     S   ,
R   ,      RT ,       trial.pos,
cumsum=cumsum(RT)),list(trial)]
data.frame(sim)
}
sim<-add.trial.cumsum.sim (sim, data)
head(sim)
c("trial", "trial.pos", "cumsum") %in% names(sim)
names(sim) %in% # Rename appropriately
lev.S <- c("Conflict", "Nonconflict", "PM (Conflict)", "PM (Nonconflict)")
lev.PM <- c("Control", "PM")
lev.cond <- c("LL.LT", "LL.HT",
"HL.LT", "HL.HT")
names(sim) %in% c("trial", "trial.pos", "cumsum")
#levels for df
lev.S <- c("Conflict", "Nonconflict", "PM (Conflict)", "PM (Nonconflict)")
lev.PM <- c("Control", "PM")
lev.cond <- c("LL.LT", "LL.HT",
"HL.LT", "HL.HT")
NR.df
levels(NR.df)$cond<- lev.cond
plot <- ggplot(NR.df, aes(cond, mean))
plot + geom_point(size=3) + geom_errorbar(aes(ymax = upper, ymin = lower), width= 0.2) +
geom_point(aes(cond, data), pch=21, size=4,
colour="black")+geom_line(aes(group = 1, y=data), linetype=2)+
ylab("Probability of non-response") + xlab("Time Pressure/ Traffic Load")
lev.cond <- c("LL.LT", "LL.HT",
"HL.LT", "HL.HT")
NR.df <- get.NRs.ATCDMC(sim, data, miss_fun=get.trials.missed.E1_A4)
levels(NR.df)$cond<- lev.cond
plot <- ggplot(NR.df, aes(cond, mean))
plot + geom_point(size=3) + geom_errorbar(aes(ymax = upper, ymin = lower), width= 0.2) +
geom_point(aes(cond, data), pch=21, size=4,
colour="black")+geom_line(aes(group = 1, y=data), linetype=2)+
ylab("Probability of non-response") + xlab("Time Pressure/ Traffic Load")
NR.df
lev.cond
levels(NR.df$cond)<- lev.cond
plot <- ggplot(NR.df, aes(cond, mean))
plot + geom_point(size=3) + geom_errorbar(aes(ymax = upper, ymin = lower), width= 0.2) +
geom_point(aes(cond, data), pch=21, size=4,
colour="black")+geom_line(aes(group = 1, y=data), linetype=2)+
ylab("Probability of non-response") + xlab("Time Pressure/ Traffic Load")
NR.df <- get.NRs.ATCDMC(sim, data, miss_fun=get.trials.missed.E1_A4)
levels(NR.df$cond)<- lev.cond
plot <- ggplot(NR.df, aes(cond, mean))
plot + geom_point(size=3) + geom_errorbar(aes(ymax = upper, ymin = lower), width= 0.2) +
geom_point(aes(cond, data), pch=21, size=4,
colour="black")+geom_line(aes(group = 1, y=data), linetype=2)+
ylab("Probability of non-response") + xlab("Time Pressure/ Traffic Load")
NR.df
mark_sim_nrs <- sim$cond=="A" & sim$cumsum>12 |sim$cond=="B" & sim$cumsum>8 |
sim$cond=="C" & sim$cumsum>20 |sim$cond=="D" & sim$cumsum>10
sim.noNRs <- sim[!mark_sim_nrs,]
data.noNRs <- data[data$R!="M",]
data.noNRs$R <- factor(as.character(data.noNRs$R ))
sim.noNRs[,!(names(sim.noNRs) %in% c("trial", "trial.pos", "cumsum"))]
sim.noNRs <-
sim.noNRs[,!(names(sim.noNRs) %in% c("trial", "trial.pos", "cumsum"))]
data.noNRs <-
data.noNRs[,!(names(data.noNRs) %in% c("trial", "trial.pos", "cumsum"))]
head(sim.noNRs)
GGLIST <- get.fitgglist.dmc(sim.noNRs, datanoNRs)
GGLIST <- get.fitgglist.dmc(sim.noNRs, data.noNRs)
GGlist
GGLIST
ggplot.RP.dmc(GGLIST[[1]])
ggplot.RP.dmc(GGLIST[[1]], xaxis="cond")
ggplot.RT.dmc(GGLIST[[2]], xaxis="cond")
warnings()
check<- h.post.predict.dmc(E1.block.B.V_cond.B.V.PMV.samples)
ggplot.RT.dmc(check, xaxis="cond")
ggplot.RT.dmc(check, xaxis="cond")
ggplot.RT.dmc(GGLIST[[2]], xaxis="cond")
clean <- function(df) {
dfc <- df
n=tapply(df$RT,list(df$s),length)
ns=tapply(df$RT,list(df$s),length)
mn=tapply(df$RT,list(df$s),mean)
sd=tapply(df$RT,list(df$s),IQR)
upper <- mn+3*(sd/1.349)
lower <- 0.2
bad <- logical(dim(df)[1])
levs <- paste(df$s,sep=".")
for (i in levels(df$s)){
lev <- i
bad[levs==lev] <- df[levs==lev,"RT"] > upper[i] | df[levs==lev,"RT"] < lower
}
df=df[!bad,]
nok=tapply(df$RT,list(df$s),length)
pbad=100-100*nok/n
nok=tapply(df$RT,list(df$s),length)
pbad=100-100*nok/ns
print(sort(round(pbad,5)))
print(mean(pbad,na.rm=T))
df
}
data.noNRs <- clean(data.noNRs)
head(data)
length(data)
length(data$RT)
length(okdats$RT)
data.withs <- data
data.withs$s <- okdats$s
data.noNRs <- data[data$R!="M",]
data.noNRs$R <- factor(as.character(data.noNRs$R ))
sim.noNRs <-
sim.noNRs[,!(names(sim.noNRs) %in% c("trial", "trial.pos", "cumsum"))]
data.noNRs <-
data.noNRs[,!(names(data.noNRs) %in% c("trial", "trial.pos", "cumsum"))]
data.noNRs <- clean(data.noNRs)
head(data.noNRs)
data.withs$s <- okdats$s
data.noNRs <- data.withs[data.withs$R!="M",]
data.noNRs$R <- factor(as.character(data.noNRs$R ))
sim.noNRs <-
sim.noNRs[,!(names(sim.noNRs) %in% c("trial", "trial.pos", "cumsum"))]
data.noNRs <-
data.noNRs[,!(names(data.noNRs) %in% c("trial", "trial.pos", "cumsum"))]
data.noNRs <- clean(data.noNRs)
GGLIST <- get.fitgglist.dmc(sim.noNRs, data.noNRs)
ggplot.RT.dmc(GGLIST[[2]], xaxis="cond")
ggplot.RT.dmc(GGLIST[[2]], xaxis="cond")
sim.noNRs <- sim[!mark_sim_nrs,]
data.withs <- data
data.withs$s <- okdats$s
data.noNRs <- data.withs[data.withs$R!="M",]
data.noNRs$R <- factor(as.character(data.noNRs$R ))
sim.noNRs <-
sim.noNRs[,!(names(sim.noNRs) %in% c("trial", "trial.pos", "cumsum"))]
data.noNRs <-
data.noNRs[,!(names(data.noNRs) %in% c("trial", "trial.pos", "cumsum"))]
data.noNRs <- clean(data.noNRs)
head(data.noNRs)
data.noNRs <- data.noNRs[,-length(data.noNRs)]
data.noNRs
#from
data.noNRs <- data.noNRs[,-length(data.noNRs)]
# Desired level names for graphs of factors
# Conflict R, Nonconf R, PMR
GGLIST <- get.fitgglist.dmc(sim.noNRs, data.noNRs)
head(data.noNRs)
#Take the non-responses out and take out the factors we needed only to calc them
sim.noNRs <- sim[!mark_sim_nrs,]
data.withs <- data
data.withs$s <- okdats$s
data.noNRs <- data.withs[data.withs$R!="M",]
data.noNRs$R <- factor(as.character(data.noNRs$R ))
sim.noNRs <-
sim.noNRs[,!(names(sim.noNRs) %in% c("trial", "trial.pos", "cumsum"))]
data.noNRs <-
data.noNRs[,!(names(data.noNRs) %in% c("trial", "trial.pos", "cumsum"))]
data.noNRs <- clean(data.noNRs)
#We removed <0.2s from the data and >3 IQR as we did for the data we estimated
#from
data.noNRs <- data.noNRs[,-length(data.noNRs)]
# Desired level names for graphs of factors
# Conflict R, Nonconf R, PMR
GGLIST <- get.fitgglist.dmc(sim.noNRs, data.noNRs)
ggplot.RT.dmc(GGLIST[[2]], xaxis="cond")
warnings()
ggplot.RT.dmc(GGLIST[[2]], xaxis="cond")
ggplot.RT.dmc(check, xaxis="cond")
GGLIST[[2]]
get.hdata.dmc <- function(hsamples){
list.wind<-lapply(seq_along(hsamples), function(samples, n, i) cbind(n[[i]], samples[[i]]$data),
samples= hsamples, n = names(hsamples))
out<-do.call(rbind, list.wind)
names(out)[1] <- "s"
out
}
checkdata <- get.hdata.dmc(E1.block.B.V_cond.B.V.PMV.samples)
checkdata
head(checkdata)
head(data.noNRs)
all.equal(checkdata[,-1], data.noNRs)
head(checkdata[,i1])
head(checkdata[,-1])
head(data.noNRs)
length(checkdata$RT)
length(data$noNRs)
length(data.noNRs$RT)
is.na(data.noNRs$RT)
any(is.na(data.noNRs$RT))
data.withs <- data
data.withs$s <- okdats$s
data.noNRs <- data.withs[data.withs$R!="M",]
data.noNRs$R <- factor(as.character(data.noNRs$R ))
sim.noNRs <-
sim.noNRs[,!(names(sim.noNRs) %in% c("trial", "trial.pos", "cumsum"))]
data.noNRs <-
data.noNRs[,!(names(data.noNRs) %in% c("trial", "trial.pos", "cumsum"))]
data.noNRs
tail(data.noNRs)
the non-responses out and take out the factors we needed only to calc them
sim.noNRs <- sim[!mark_sim_nrs,]
data.withs <- data
data.withs$s <- okdats$s
data[(data$block=="2" & data$R=="P"),]
data[(data$block=="2" & data$R=="P"),]
head(dat)
head(data)
length(data.noNRs)
length(data.noNRs$RT)
data.withs <- data
data.withs$s <- okdats$s
data<-data[!(data$block=="2" & data$R=="P"),]
data.noNRs <- data.withs[data.withs$R!="M",]
data.noNRs$R <- factor(as.character(data.noNRs$R ))
length(data.noNRs$RT)
data.noNRs <-
data.noNRs[,!(names(data.noNRs) %in% c("trial", "trial.pos", "cumsum"))]
data.noNRs <- clean(data.noNRs)
str(data.noNRs)
lower
head(data.noNRs)
str(data.noNRs)
data.withs <- data
data.withs$s <- okdats$s
data<-data[!(data$block=="2" & data$R=="P"),]
data.noNRs <- data.withs[data.withs$R!="M",]
data.noNRs$R <- factor(as.character(data.noNRs$R ))
sim.noNRs <-
sim.noNRs[,!(names(sim.noNRs) %in% c("trial", "trial.pos", "cumsum"))]
data.noNRs <-
data.noNRs[,!(names(data.noNRs) %in% c("trial", "trial.pos", "cumsum"))]
str(data.noNRs)
mean(data.noNRs$RT)
okdats <- data.noNRs[,c(6,1:5)]
head(okdats)
data.noNRs <- clean(okdats)
save(okdats, file="test.RData")
