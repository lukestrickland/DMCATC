} else if(data.E1$S[i]=="nn" & data.E1$R[i]=="N"){
data.E1$C[i] <- 1
} else if(data.E1$S[i]=="pc" & data.E1$R[i]=="P"){
data.E1$C[i] <- 1
} else if(data.E1$S[i]=="pn" & data.E1$R[i]=="P"){
data.E1$C[i] <- 1
}
}
#
pkgs <- c("dplyr", "tidyr", "broom", "pander", "car", "lme4")
install.packages(pkgs) #install
rm(list=ls())
setwd("C:/Users/Russell Boag/Documents/GitHub/DMCATC")
source("dmc/dmc.R")
load_model ("LBA","lbaN_B.R")
source("LSAnova.R")
pkgs <- c("dplyr", "tidyr", "broom", "pander", "car", "lme4")
install.packages(pkgs) #install
install.packages(pkgs)
sapply(pkgs, require, character.only = T) #load
load("C:/Users/Russell Boag/Documents/GitHub/DMCATC/data/samples/E1.block.B.V_cond.B.V.PMV.samples.RData")  # Samples object
samples.E1 <- E1.block.B.V_cond.B.V.PMV.samples
rm(E1.block.B.V_cond.B.V.PMV.samples)
# # # Get data from samples object # # #
#
get.hdata.dmc <- function(hsamples){
list.wind<-lapply(seq_along(hsamples), function(samples, n, i) cbind(n[[i]], samples[[i]]$data),
samples= hsamples, n = names(hsamples))
out<-do.call(rbind, list.wind)
names(out)[1] <- "s"
out
}
#
data.E1 <- get.hdata.dmc(samples.E1)  # Get data from samples object
head(data.E1)
# save(data.E1, file="data.E1.RData")
# all.equal(datE1[order(datE1$s),], data2)  # Check recovered data matches original data
# # # Add logical S-R match factor 'C' # # #
#
data.E1$C <- rep(0,length(data.E1$RT))
for(i in 1:length(data.E1$RT)){
if(data.E1$S[i]=="cc" & data.E1$R[i]=="C"){
data.E1$C[i] <- 1
} else if(data.E1$S[i]=="nn" & data.E1$R[i]=="N"){
data.E1$C[i] <- 1
} else if(data.E1$S[i]=="pc" & data.E1$R[i]=="P"){
data.E1$C[i] <- 1
} else if(data.E1$S[i]=="pn" & data.E1$R[i]=="P"){
data.E1$C[i] <- 1
}
}
# Conflict Detection Task trials only (no PM)
CDT <- data.E1[!(data.E1$S=="pc" | data.E1$S=="pn"),]
CDT$S <- factor(as.character(CDT$S)); CDT$R <- factor(as.character(CDT$R))
str(CDT)
head(CDT)
# PM Task trials only
PMT <- data.E1[(data.E1$S=="pc" | data.E1$S=="pn"),]
PMT$S <- factor(as.character(PMT$S)); PMT$block <- factor(as.character(PMT$block))
str(PMT)
head(PMT)
#
# Conflict Detection Task correct response trials only (no PM)
dCDT.RT <- arr2df(tapply(CDT$RT[CDT$C==1],
list(s=CDT$s[CDT$C==1], block=CDT$block[CDT$C==1], cond=CDT$cond[CDT$C==1], S=CDT$S[CDT$C==1]),
mean))
head(dCDT.RT)
str(dCDT.RT)
# PM Task correct response trials only
dPMT.RT <- arr2df(tapply(PMT$RT[PMT$C==1],
list(s=PMT$s[PMT$C==1], block=PMT$block[PMT$C==1], cond=PMT$cond[PMT$C==1], S=PMT$S[PMT$C==1]),
mean))
head(dPMT.RT)
str(dPMT.RT)
head(data.E1)
sumstat <- data.E1 %>%
# Select and rename five variables
select(
`RT` = RT
) %>%
# Find the mean, st. dev., min, and max for each variable
summarise_each(funs(mean, sd, min, max)) %>%
# Move summary stats to columns
gather(key, value, everything()) %>%
separate(key, into = c("variable", "stat"), sep = "_") %>%
spread(stat, value) %>%
# Set order of summary statistics
select(variable, mean, sd, min, max) %>%
# Round all numeric variables to one decimal point
mutate_each(funs(round(., 1)), -variable)
sumstat
sumstat <- data.E1 %>%
# Select and rename five variables
select(
`RT` = RT
) %>%
# Find the mean, st. dev., min, and max for each variable
summarise_each(funs(mean, sd)) %>%
# Move summary stats to columns
gather(key, value, everything()) %>%
separate(key, into = c("variable", "stat"), sep = "_") %>%
spread(stat, value) %>%
# Set order of summary statistics
select(variable, mean, sd) %>%
# Round all numeric variables to one decimal point
mutate_each(funs(round(., 1)), -variable)
sumstat <- data.E1 %>%
# Select and rename five variables
select(
`RT` = RT
) %>%
# Find the mean, st. dev., min, and max for each variable
summarise_all(funs(mean, sd)) %>%
# Move summary stats to columns
gather(key, value, everything()) %>%
separate(key, into = c("variable", "stat"), sep = "_") %>%
spread(stat, value) %>%
# Set order of summary statistics
select(variable, mean, sd) %>%
# Round all numeric variables to one decimal point
mutate_each(funs(round(., 1)), -variable)
sumstat <- data.E1 %>%
# Select and rename five variables
select(
`RT` = RT
) %>%
# Find the mean, st. dev., min, and max for each variable
summarise(funs(mean, sd)) %>%
# Move summary stats to columns
gather(key, value, everything()) %>%
separate(key, into = c("variable", "stat"), sep = "_") %>%
spread(stat, value) %>%
# Set order of summary statistics
select(variable, mean, sd) %>%
# Round all numeric variables to one decimal point
mutate_each(funs(round(., 1)), -variable)
sumstat <- CDT %>%
# Select and rename five variables
select(
`RT` = RT
) %>%
# Find the mean, st. dev., min, and max for each variable
summarise(funs(mean, sd)) %>%
# Move summary stats to columns
gather(key, value, everything()) %>%
separate(key, into = c("variable", "stat"), sep = "_") %>%
spread(stat, value) %>%
# Set order of summary statistics
select(variable, mean, sd) %>%
# Round all numeric variables to one decimal point
mutate_each(funs(round(., 1)), -variable)
sumstat <- CDT %>%
# Select and rename five variables
select(
`RT` = RT
) %>%
# Find the mean, st. dev., min, and max for each variable
summarise_all(funs(mean, sd)) %>%
# Move summary stats to columns
gather(key, value, everything()) %>%
separate(key, into = c("variable", "stat"), sep = "_") %>%
spread(stat, value) %>%
# Set order of summary statistics
select(variable, mean, sd) %>%
# Round all numeric variables to one decimal point
mutate_each(funs(round(., 1)), -variable)
head(CDT.Acc.COND)
# Ongoing Task Accuracy
CDT.Acc <- ddply(CDT, ~s*cond*block*S, summarise, RP=mean(C))
CDT.Acc.S <- ddply(CDT.Acc, ~S, summarise, M=mean(RP), SD=sd(RP))
CDT.Acc.BLOCK <- ddply(CDT.Acc, ~S*block, summarise, M=mean(RP), SD=sd(RP))
CDT.Acc.COND <- ddply(CDT.Acc, ~S*cond, summarise, M=mean(RP), SD=sd(RP))
# PM Task Accuracy
PMT.Acc <- ddply(PMT, ~s*cond*block*S, summarise, RP=mean(C))
PMT.Acc.S <- ddply(PMT.Acc, ~block, summarise, M=mean(RP), SD=sd(RP))
PMT.Acc.COND <- ddply(PMT.Acc, ~cond, summarise, M=mean(RP), SD=sd(RP))
CDT.Acc.S
PMT.Acc.S
CDT.Acc.BLOCK
CDT.Acc.COND
PMT.Acc.COND
# # # Manifests - Mean RT # # #
#
# Ongoing Task Correct RTs by Block
CDT.RT.corr.BLOCK <- ddply(data.E1[ (data.E1$S=="cc" & data.E1$C=="1") |
(data.E1$S=="nn" & data.E1$C=="1"), ],
~S*block, summarise, M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
# PM Task Correct RTs by Block
PMT.RT.corr.BLOCK <- ddply(data.E1[ (data.E1$S=="pc" & data.E1$C==1) |
(data.E1$S=="pn" & data.E1$C==1), ],
~block, summarise, M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
# Ongoing Task Correct RTs by Condition
CDT.RT.corr.COND <- ddply(data.E1[ (data.E1$S=="cc" & data.E1$C==1) | (data.E1$S=="nn" & data.E1$C==1), ], ~S*cond, summarise,
M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
# PM Task Correct RTs by Condition
PMT.RT.corr.COND <- ddply(data.E1[ (data.E1$S=="pc" & data.E1$C==1) | (data.E1$S=="pn" & data.E1$C==1), ], ~cond, summarise,
M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
CDT.RT.corr.BLOCK
PMT.RT.corr.BLOCK
CDT.RT.corr.COND
PMT.RT.corr.COND
pkgs <- c("dplyr", "tidyr", "broom", "pander", "car", "lme4", "ddply")
sapply(pkgs, require, character.only = T) #load
pkgs <- c("dplyr", "tidyr", "broom", "pander", "car", "lme4", "plyr")
sapply(pkgs, require, character.only = T) #load
pkgs <- c("plyr", "dplyr", "tidyr", "broom", "pander", "car", "lmer")
sapply(pkgs, require, character.only = T) #load
CDT.Acc <- ddply(CDT, ~s*cond*block*S, summarise, RP=mean(C))
CDT.Acc.S <- ddply(CDT.Acc, ~S, summarise, M=mean(RP), SD=sd(RP))
CDT.Acc.BLOCK <- ddply(CDT.Acc, ~S*block, summarise, M=mean(RP), SD=sd(RP))
CDT.Acc.COND <- ddply(CDT.Acc, ~S*cond, summarise, M=mean(RP), SD=sd(RP))
PMT.Acc <- ddply(PMT, ~s*cond*block*S, summarise, RP=mean(C))
PMT.Acc.S <- ddply(PMT.Acc, ~block, summarise, M=mean(RP), SD=sd(RP))
PMT.Acc.COND <- ddply(PMT.Acc, ~cond, summarise, M=mean(RP), SD=sd(RP))
CDT.Acc.S
PMT.Acc.S
CDT.Acc.BLOCK
CDT.Acc.COND
PMT.Acc.COND
CDT.RT.corr.BLOCK <- ddply(data.E1[ (data.E1$S=="cc" & data.E1$C=="1") |
(data.E1$S=="nn" & data.E1$C=="1"), ],
~S*block, summarise, M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
# PM Task Correct RTs by Block
PMT.RT.corr.BLOCK <- ddply(data.E1[ (data.E1$S=="pc" & data.E1$C==1) |
(data.E1$S=="pn" & data.E1$C==1), ],
~block, summarise, M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
# Ongoing Task Correct RTs by Condition
CDT.RT.corr.COND <- ddply(data.E1[ (data.E1$S=="cc" & data.E1$C==1) | (data.E1$S=="nn" & data.E1$C==1), ], ~S*cond, summarise,
M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
# PM Task Correct RTs by Condition
PMT.RT.corr.COND <- ddply(data.E1[ (data.E1$S=="pc" & data.E1$C==1) | (data.E1$S=="pn" & data.E1$C==1), ], ~cond, summarise,
M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
CDT.RT.corr.BLOCK
PMT.RT.corr.BLOCK
CDT.RT.corr.COND
PMT.RT.corr.COND
head(CDT.Acc.COND)
head(mtcars)
xdigits(mtcars, pad = FALSE)
pkgs <- c("plyr", "dplyr", "tidyr", "broom", "pander", "car", "lme4", "xtable")
sapply(pkgs, require, character.only = T) #load
install.packages("xtable")
install.packages("lme4")
pkgs <- c("plyr", "dplyr", "tidyr", "broom", "pander", "car", "lme4", "xtable")
sapply(pkgs, require, character.only = T) #load
load("C:/Users/Russell Boag/Documents/GitHub/DMCATC/data/samples/E1.block.B.V_cond.B.V.PMV.samples.RData")  # Samples object
rm(E1.block.B.V_cond.B.V.PMV.samples)
head(mtcars)
xdigits(mtcars, pad = FALSE)
xdigits(mtcars, pad = TRUE)
xalign(mtcars)
xdisplay(mtcars)
xtable(mtcars, align = xalign(mtcars), digits = xdigits(mtcars),
display = xdisplay(mtcars))
xtable(mtcars, auto = TRUE)
mt <- xtable(mtcars)
align(mt) <- xalign(mt)
digits(mt) <- xdigits(mt)
display(mt) <- xdisplay(mt)
mt
xtable(CDT.Acc.S, auto = TRUE)
CDT.Acc.S
names(CDT.Acc.S)
names(CDT.Acc.S) <- c("Stimulus", "Mean", "SD")
PMT.Acc.S
levels(CDT.Acc.S$Stimulus)
CDT
levels(CDT$S)
levels(CDT$S) <- c("Conflict","Nonconflict")
levels(CDT$block)
levels(CDT$block) <- c("Control","PM")
str(CDT)
levels(CDT$cond)
levels(CDT$cond) <- c("LL.LT","LL.HT","HL.LT","HL.HT")
str(CDT)
# Ongoing Task Accuracy
CDT.Acc <- ddply(CDT, ~s*cond*block*S, summarise, RP=mean(C))
CDT.Acc.S <- ddply(CDT.Acc, ~S, summarise, M=mean(RP), SD=sd(RP))
CDT.Acc.BLOCK <- ddply(CDT.Acc, ~S*block, summarise, M=mean(RP), SD=sd(RP))
CDT.Acc.COND <- ddply(CDT.Acc, ~S*cond, summarise, M=mean(RP), SD=sd(RP))
names(CDT.Acc.S) <- c("Stimulus", "Mean", "SD")
PMT.Acc.S
CDT.Acc.BLOCK
CDT.Acc.COND
rownames(CDT.Acc)
rownames(CDT.Acc.S)
CDT.Acc.S
PMT.Acc.S
names(PMT.Acc.S)
names(CDT.Acc.BLOCK)
CDT.Acc.COND
names(CDT.Acc.COND)
names(PMT.Acc.COND)
names(CDT.Acc.S) <- c("Stimulus","Mean","SD")
names(PMT.Acc.S) <- c("PM Block","Mean","SD")
names(CDT.Acc.BLOCK) <- c("Stimulus","PM Block","Mean","SD")
names(CDT.Acc.COND) <- c("Stimulus","Time Pressue","Mean","SD")
names(PMT.Acc.COND) <- c("Time Pressure","Mean","SD")
str(PMT)
levels(PMT$S) <- c("PM (Conflict)","PM (Nonconflict)")
levels(PMT$block) <- c("PM")
levels(PMT$cond) <- c("LL.LT","LL.HT","HL.LT","HL.HT")
str(PMT)
str(PMT)
PMT.Acc <- ddply(PMT, ~s*cond*block*S, summarise, RP=mean(C))
PMT.Acc.S <- ddply(PMT.Acc, ~block, summarise, M=mean(RP), SD=sd(RP))
PMT.Acc.COND <- ddply(PMT.Acc, ~cond, summarise, M=mean(RP), SD=sd(RP))
names(CDT.Acc.S) <- c("Stimulus","Mean","SD")
names(PMT.Acc.S) <- c("PM Block","Mean","SD")
names(CDT.Acc.BLOCK) <- c("Stimulus","PM Block","Mean","SD")
names(CDT.Acc.COND) <- c("Stimulus","Time Pressue","Mean","SD")
names(PMT.Acc.COND) <- c("Time Pressure","Mean","SD")
xtable(CDT.Acc.S, auto = TRUE)
xtable(CDT.Acc.S, auto = TRUE)
xtable(PMT.Acc.S, auto = TRUE)
xtable(CDT.Acc.BLOCK, auto = TRUE)
xtable(CDT.Acc.COND, auto = TRUE)
xtable(PMT.Acc.COND, auto = TRUE)
CDT.RT.corr.BLOCK
xtable(CDT.Acc.S, auto = TRUE)
CDT.Acc.S.TABLE <- xtable(CDT.Acc.S, auto = TRUE)
CDT.Acc.S.TABLE
caption(CDT.Acc.S.TABLE)
caption(CDT.Acc.S.TABLE) <- c("Ongoing Task Accuracy")
CDT.Acc.S
CDT.Acc.S.TABLE
CDT.Acc.S.TABLE <- xtable(CDT.Acc.S, auto = TRUE, floating=T)
CDT.Acc.S.TABLE
CDT.Acc.S.TABLE <- xtable(CDT.Acc.S, auto = TRUE, floating=F)
caption(CDT.Acc.S.TABLE) <- c("Ongoing Task Accuracy")
CDT.Acc.S.TABLE
CDT.Acc.S.TABLE <- xtable(CDT.Acc.S, auto = TRUE, type = "table*")
CDT.Acc.S.TABLE
CDT.Acc.S.TABLE <- xtable(CDT.Acc.S, type = "table*")
CDT.Acc.S.TABLE
CDT.Acc.S.TABLE <- xtable(CDT.Acc.S, auto = TRUE)
CDT.Acc.S.TABLE <- xtable(CDT.Acc.S, auto = TRUE)
caption(CDT.Acc.S.TABLE) <- c("Ongoing Task Accuracy")
CDT.Acc.S.TABLE
PMT.Acc.S.TABLE <- xtable(PMT.Acc.S, auto = TRUE, digits = 2)
PMT.Acc.S.TABLE
CDT.Acc.S.TABLE <- xtable(CDT.Acc.S, auto = TRUE, digits = 2)
caption(CDT.Acc.S.TABLE) <- c("Ongoing Task Accuracy")
CDT.Acc.S.TABLE
PMT.Acc.S.TABLE
PMT.Acc.S
caption(PMT.Acc.S.TABLE) <- c("PM Accuracy")
PMT.Acc.S.TABLE
PMT.Acc.S.TABLE <- xtable(PMT.Acc.S, auto = TRUE, digits = 2, caption = "PM Accuracy")
PMT.Acc.S.TABLE <- xtable(PMT.Acc.S, auto = TRUE, digits = 2, caption = "PM Accuracy")
PMT.Acc.S.TABLE
PMT.Acc.S.TABLE <- xtable(PMT.Acc.S, auto = TRUE, digits = 2, title = "PM Accuracy")
PMT.Acc.S.TABLE
PMT.Acc.S.TABLE <- xtable(PMT.Acc.S, auto = TRUE, digits = 2, caption = "PM Accuracy")
PMT.Acc.S.TABLE <- xtable(PMT.Acc.S, auto = TRUE, digits = 2, caption = "PM Accuracy")
PMT.Acc.S.TABLE
CDT.Acc.S
PMT.Acc.S
CDT.Acc.BLOCK
CDT.Acc.COND
PMT.Acc.COND
PMT.Acc.COND.TABLE
CDT.Acc.S.TABLE <- xtable(CDT.Acc.S, auto = TRUE, digits = 2, caption = "Ongoing Task Accuracy")
CDT.Acc.S.TABLE
PMT.Acc.S.TABLE <- xtable(PMT.Acc.S, auto = TRUE, digits = 2, caption = "PM Accuracy")
PMT.Acc.S.TABLE
CDT.Acc.BLOCK.TABLE <- xtable(CDT.Acc.BLOCK, auto = TRUE, digits = 2, caption = "Ongoing Task Accuracy by PM Block")
CDT.Acc.BLOCK.TABLE
CDT.Acc.COND.TABLE <- xtable(CDT.Acc.COND, auto = TRUE, digits = 2, caption = "Ongoing Task Accuracy by Time Pressure")
CDT.Acc.COND.TABLE
PMT.Acc.COND.TABLE <- xtable(PMT.Acc.COND, auto = TRUE, digits = 2, caption = "PM Accuracy by Time Pressure")
PMT.Acc.COND.TABLE
CDT.Acc.S.TABLE
CDT.Acc.S.TABLE
PMT.Acc.S.TABLE
CDT.Acc.BLOCK.TABLE
CDT.Acc.COND.TABLE
PMT.Acc.S.TABLE
PMT.Acc.COND.TABLE
# Ongoing Task Correct RTs by Block
CDT.RT.corr.BLOCK <- ddply(data.E1[ (data.E1$S=="cc" & data.E1$C=="1") |
(data.E1$S=="nn" & data.E1$C=="1"), ],
~S*block, summarise, M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
# PM Task Correct RTs by Block
PMT.RT.corr.BLOCK <- ddply(data.E1[ (data.E1$S=="pc" & data.E1$C==1) |
(data.E1$S=="pn" & data.E1$C==1), ],
~block, summarise, M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
# Ongoing Task Correct RTs by Condition
CDT.RT.corr.COND <- ddply(data.E1[ (data.E1$S=="cc" & data.E1$C==1) | (data.E1$S=="nn" & data.E1$C==1), ], ~S*cond, summarise,
M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
# PM Task Correct RTs by Condition
PMT.RT.corr.COND <- ddply(data.E1[ (data.E1$S=="pc" & data.E1$C==1) | (data.E1$S=="pn" & data.E1$C==1), ], ~cond, summarise,
M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
CDT.RT.corr.BLOCK
PMT.RT.corr.BLOCK
CDT.RT.corr.COND
PMT.RT.corr.COND
CDT.RT.corr.BLOCK.TABLE <- xtable(CDT.RT.corr.BLOCK, auto = TRUE, digits = 2, caption = "Ongoing Task RT by PM Block")
CDT.RT.corr.BLOCK.TABLE <- xtable(CDT.RT.corr.BLOCK, auto = TRUE, digits = 2, caption = "Ongoing Task RT by PM Block")
CDT.RT.corr.BLOCK.TABLE
names(CDT.RT.corr.BLOCK)
names(CDT.RT.corr.BLOCK) <- c("Stimulus","PM Block","Mean","SD")
names(CDT.RT.corr.BLOCK) <- c("Stimulus","PM Block","Mean","SD")
CDT.RT.corr.BLOCK.TABLE <- xtable(CDT.RT.corr.BLOCK, auto = TRUE, digits = 2, caption = "Ongoing Task RT (s) by PM Block")
CDT.RT.corr.BLOCK.TABLE
levels(CDT.RT.corr.BLOCK$Stimulus)
levels(CDT.RT.corr.BLOCK$Stimulus) <- c("Conflict","Nonconflict","PM (Conflict)","PM (Nonconflict)")
CDT.RT.corr.BLOCK.TABLE <- xtable(CDT.RT.corr.BLOCK, auto = TRUE, digits = 2, caption = "Ongoing Task RT (s) by PM Block")
CDT.RT.corr.BLOCK.TABLE
levels(CDT.RT.corr.BLOCK$block) <- c("Control","PM")
CDT.RT.corr.BLOCK.TABLE <- xtable(CDT.RT.corr.BLOCK, auto = TRUE, digits = 2, caption = "Ongoing Task RT (s) by PM Block")
levels(CDT.RT.corr.BLOCK$Stimulus) <- c("Conflict","Nonconflict","PM (Conflict)","PM (Nonconflict)")
levels(CDT.RT.corr.BLOCK$block) <- c("Control","PM")
# Ongoing Task Correct RTs by Block
CDT.RT.corr.BLOCK <- ddply(data.E1[ (data.E1$S=="cc" & data.E1$C=="1") |
(data.E1$S=="nn" & data.E1$C=="1"), ],
~S*block, summarise, M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
# PM Task Correct RTs by Block
PMT.RT.corr.BLOCK <- ddply(data.E1[ (data.E1$S=="pc" & data.E1$C==1) |
(data.E1$S=="pn" & data.E1$C==1), ],
~block, summarise, M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
# Ongoing Task Correct RTs by Condition
CDT.RT.corr.COND <- ddply(data.E1[ (data.E1$S=="cc" & data.E1$C==1) | (data.E1$S=="nn" & data.E1$C==1), ], ~S*cond, summarise,
M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
# PM Task Correct RTs by Condition
PMT.RT.corr.COND <- ddply(data.E1[ (data.E1$S=="pc" & data.E1$C==1) | (data.E1$S=="pn" & data.E1$C==1), ], ~cond, summarise,
M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
levels(CDT.RT.corr.BLOCK$Stimulus) <- c("Conflict","Nonconflict","PM (Conflict)","PM (Nonconflict)")
levels(CDT.RT.corr.BLOCK$block) <- c("Control","PM")
names(CDT.RT.corr.BLOCK) <- c("Stimulus","PM Block","Mean","SD")
CDT.RT.corr.BLOCK.TABLE <- xtable(CDT.RT.corr.BLOCK, auto = TRUE, digits = 2, caption = "Ongoing Task RT (s) by PM Block")
CDT.RT.corr.BLOCK.TABLE
CDT.RT.corr.BLOCK <- ddply(data.E1[ (data.E1$S=="cc" & data.E1$C=="1") |
(data.E1$S=="nn" & data.E1$C=="1"), ],
~S*block, summarise, M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
# PM Task Correct RTs by Block
PMT.RT.corr.BLOCK <- ddply(data.E1[ (data.E1$S=="pc" & data.E1$C==1) |
(data.E1$S=="pn" & data.E1$C==1), ],
~block, summarise, M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
# Ongoing Task Correct RTs by Condition
CDT.RT.corr.COND <- ddply(data.E1[ (data.E1$S=="cc" & data.E1$C==1) | (data.E1$S=="nn" & data.E1$C==1), ], ~S*cond, summarise,
M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
# PM Task Correct RTs by Condition
PMT.RT.corr.COND <- ddply(data.E1[ (data.E1$S=="pc" & data.E1$C==1) | (data.E1$S=="pn" & data.E1$C==1), ], ~cond, summarise,
M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
levels(CDT.RT.corr.BLOCK$S) <- c("Conflict","Nonconflict","PM (Conflict)","PM (Nonconflict)")
levels(CDT.RT.corr.BLOCK$block) <- c("Control","PM")
names(CDT.RT.corr.BLOCK) <- c("Stimulus","PM Block","Mean","SD")
CDT.RT.corr.BLOCK.TABLE <- xtable(CDT.RT.corr.BLOCK, auto = TRUE, digits = 2, caption = "Ongoing Task RT (s) by PM Block")
CDT.RT.corr.BLOCK.TABLE
PMT.Acc.S.TABLE
levels(PMT.RT.corr.BLOCK$block)
names(PMT.RT.corr.BLOCK)
names(PMT.RT.corr.BLOCK) <- c("PM Block","Mean","SD")
PMT.RT.corr.BLOCK.TABLE <- xtable(PMT.RT.corr.BLOCK, auto = TRUE, digits = 2, caption = "PM RT (s) by PM Block")
PMT.RT.corr.BLOCK.TABLE
PMT.RT.corr.BLOCK.TABLE <- xtable(PMT.RT.corr.BLOCK, auto = TRUE, digits = 2, caption = "Overall PM RT (s)")
PMT.RT.corr.BLOCK.TABLE
levels(PMT.RT.corr.BLOCK$block) <- c("Control","PM")
PMT.RT.corr.BLOCK <- ddply(data.E1[ (data.E1$S=="pc" & data.E1$C==1) |
(data.E1$S=="pn" & data.E1$C==1), ],
~block, summarise, M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
levels(PMT.RT.corr.BLOCK$block) <- c("Control","PM")
names(PMT.RT.corr.BLOCK) <- c("PM Block","Mean","SD")
PMT.RT.corr.BLOCK.TABLE <- xtable(PMT.RT.corr.BLOCK, auto = TRUE, digits = 2, caption = "Overall PM RT (s)")
PMT.RT.corr.BLOCK.TABLE
CDT.RT.corr.COND
levels(CDT.RT.corr.COND$S)
levels(CDT.RT.corr.COND$cond)
names(CDT.RT.corr.COND)
names(CDT.RT.corr.COND) <- c("Stimulus","Time Pressure","Mean","SD")
CDT.RT.corr.COND.TABLE <- xtable(CDT.RT.corr.COND, auto = TRUE, digits = 2, caption = "Ongoing Task RT (s) by Time Pressure")
CDT.RT.corr.COND.TABLE
# Ongoing Task Correct RTs by Block
CDT.RT.corr.BLOCK <- ddply(data.E1[ (data.E1$S=="cc" & data.E1$C=="1") |
(data.E1$S=="nn" & data.E1$C=="1"), ],
~S*block, summarise, M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
# PM Task Correct RTs by Block
PMT.RT.corr.BLOCK <- ddply(data.E1[ (data.E1$S=="pc" & data.E1$C==1) |
(data.E1$S=="pn" & data.E1$C==1), ],
~block, summarise, M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
# Ongoing Task Correct RTs by Condition
CDT.RT.corr.COND <- ddply(data.E1[ (data.E1$S=="cc" & data.E1$C==1) | (data.E1$S=="nn" & data.E1$C==1), ], ~S*cond, summarise,
M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
# PM Task Correct RTs by Condition
PMT.RT.corr.COND <- ddply(data.E1[ (data.E1$S=="pc" & data.E1$C==1) | (data.E1$S=="pn" & data.E1$C==1), ], ~cond, summarise,
M=mean(RT, na.rm = TRUE), SD=sd(RT, na.rm = TRUE))
levels(CDT.RT.corr.BLOCK$S) <- c("Conflict","Nonconflict","PM (Conflict)","PM (Nonconflict)")
levels(CDT.RT.corr.BLOCK$block) <- c("Control","PM")
names(CDT.RT.corr.BLOCK) <- c("Stimulus","PM Block","Mean","SD")
CDT.RT.corr.BLOCK.TABLE <- xtable(CDT.RT.corr.BLOCK, auto = TRUE, digits = 2, caption = "Ongoing Task RT (s) by PM Block")
CDT.RT.corr.BLOCK.TABLE
levels(PMT.RT.corr.BLOCK$block) <- c("Control","PM")
names(PMT.RT.corr.BLOCK) <- c("PM Block","Mean","SD")
PMT.RT.corr.BLOCK.TABLE <- xtable(PMT.RT.corr.BLOCK, auto = TRUE, digits = 2, caption = "Overall PM RT (s)")
PMT.RT.corr.BLOCK.TABLE
levels(CDT.RT.corr.COND$S) <- c("Conflict","Nonconflict","PM (Conflict)","PM (Nonconflict)")
levels(CDT.RT.corr.COND$cond) <- c("LL.LT","LL.HT","HL.LT","HL.HT")
names(CDT.RT.corr.COND) <- c("Stimulus","Time Pressure","Mean","SD")
CDT.RT.corr.COND.TABLE <- xtable(CDT.RT.corr.COND, auto = TRUE, digits = 2, caption = "Ongoing Task RT (s) by Time Pressure")
CDT.RT.corr.COND.TABLE
PMT.RT.corr.COND
levels(PMT.RT.corr.COND$cond) <- c("LL.LT","LL.HT","HL.LT","HL.HT")
PMT.RT.corr.COND
names(PMT.RT.corr.COND) <- c("Time Pressure","Mean","SD")
PMT.RT.corr.COND
rownames(PMT.RT.corr.COND)
rownames(PMT.RT.corr.COND) <- NULL
PMT.RT.corr.COND
rownames(PMT.RT.corr.COND)
PMT.RT.corr.COND.TABLE <- xtable(PMT.RT.corr.COND, auto = TRUE, digits = 2, caption = "PM RT (s) by Time Pressure")
PMT.RT.corr.COND.TABLE
